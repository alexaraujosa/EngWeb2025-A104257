<!DOCTYPE html>
<html lang="pt">
<head>
  <meta charset="UTF-8" />
  <title>Perfil</title>
  <link rel="stylesheet" href="/stylesheets/style.css" />
  <link rel="stylesheet" href="/stylesheets/layout.css" />
  <link rel="stylesheet" href="/stylesheets/profile.css" />
  <link rel="stylesheet" href="/stylesheets/consumidor/feed.css" />
</head>
<body>
  <div class="container">
    <!-- Sidebar esquerda -->
    <aside class="sidebar-left">
      <h2>Menu</h2>
        <ul>
            <li><a href="#" onclick="history.back(); return false;">Voltar</a></li>
            <li><a href="/logout">Sair</a></li>
        </ul>
    </aside>

    <!-- Conte√∫do principal -->
    <main class="content profile-page">
      <h1 class="profile-title">Perfil do Utilizador</h1>

      <!-- Sec√ß√£o do avatar -->
      <section class="profile-avatar-section">
        <img src="<%= user.avatar ? `/vault/${user.avatar}` : '/images/default-avatar.png' %>" alt="Avatar" class="avatar" />
        <form action="/profile/avatar" method="POST" enctype="multipart/form-data" class="avatar-form">
          <input type="file" name="avatar" accept="image/*" required />
          <button type="submit">Alterar Foto</button>
        </form>
      </section>

      <!-- Informa√ß√µes edit√°veis -->
      <section class="profile-fields">
        <div class="profile-field">
          <label>Username</label>
          <span id="username"><%= user.username %></span>
          <button onclick="editField('username')">‚úèÔ∏è</button>
        </div>
        <div id="usernameError" class="error-message"></div>

        <div class="profile-field">
          <label>Primeiro Nome</label>
          <span id="fname"><%= user.fname %></span>
          <button onclick="editField('fname')">‚úèÔ∏è</button>
        </div>
        <div id="fnameError" class="error-message"></div>

        <div class="profile-field">
          <label>√öltimo Nome</label>
          <span id="lname"><%= user.lname %></span>
          <button onclick="editField('lname')">‚úèÔ∏è</button>
        </div>
        <div id="lnameError" class="error-message"></div>

        <div class="profile-field">
          <label>Email</label>
          <span id="email"><%= user.email %></span>
          <button onclick="editField('email')">‚úèÔ∏è</button>
        </div>
        <div id="emailError" class="error-message"></div>
      </section>

      <!-- Bot√µes principais -->
      <div class="buttons">
        <button onclick="save()">üíæ Guardar</button>
      </div>

      <!-- Estado atual -->
      <div id="currentState" class="currentState"></div>

      <!-- Link para alterar password -->
      <div class="change-password">
        <p onclick="window.location.href='/profile/password'"><b>üîí Alterar Palavra-Passe</b></p>
      </div>
    </main>

    <!-- Sidebar direita reservada -->
    <aside class="sidebar-right">
      <!-- Conte√∫do futuro -->
    </aside>
  </div>
</body>
</html>

<script>
let originalData = {
    username: "<%= user.username %>",
    fname: "<%= user.fname %>",
    lname: "<%= user.lname %>",
    email: "<%= user.email %>"
};

function checkUnsavedChanges() {
    const currentData = {
        username: document.getElementById("username")?.textContent,
        fname: document.getElementById("fname")?.textContent,
        lname: document.getElementById("lname")?.textContent,
        email: document.getElementById("email")?.textContent
    };

    const unsaved = Object.keys(originalData).some(
        key => currentData[key] !== originalData[key]
    );

    document.getElementById("currentState").textContent = unsaved 
        ? "‚ö†Ô∏è You have unsaved changes. Press Save to confirm." 
        : "";
}

function showError(fieldId, message) {
    document.getElementById(fieldId + "Error").textContent = message;
}

function clearError(fieldId) {
    document.getElementById(fieldId + "Error").textContent = "";
}

function validateField(fieldId, value){
    switch(fieldId) {
        case "username":
            if (!value.trim()) {
                showError(field, "Nome de utilizador inv√°lido");
                return false;
            }
            break;
        case "fname":
            if (!value.trim()) {
                showError(fieldId, "Falta preencher o seu primeiro nome");
                return false;
            } else if (!/^[A-Z][a-z]*/.test(value)) {
                showError(fieldId, "O primeiro nome deve come√ßar por uma mai√∫scula");
                return false;
            }
            break;
        case "lname":
            if (!value.trim()) {
                showError(fieldId, "Falta preencher o seu √∫ltimo nome");
                return false;
            } else if (!/^[A-Z][a-z]*/.test(value)) {
                showError(fieldId, "O √∫ltimo nome deve come√ßar por uma mai√∫scula");
                return false;
            }
            break;
        case "email":
            if (!value.trim()) {
                showError(fieldId, "Falta preencher o email");
                return false;
            } else if (!/^[^@]+@[^@]+\.[^@]+$/.test(value)) {
                showError(fieldId, "O email inserido √© inv√°lido");
                return false;
            }
            break;
        default:
            return true;
    }

    clearError(fieldId);
    return true;
}

function editField(fieldId) {
    const span = document.getElementById(fieldId);
    const currentValue = span.textContent;

    const input = document.createElement("input");
    input.type = "text";
    input.value = currentValue;
    input.id = fieldId;
    

    input.addEventListener("blur", () => {
        const newValue = input.value.trim();

        const isValid = validateField(fieldId, newValue);
        if(isValid){
            const newSpan = document.createElement("span");
            newSpan.id = fieldId;
            newSpan.textContent = newValue;
            input.replaceWith(newSpan);
            checkUnsavedChanges();
        } else {
            input.focus(); 
        }
    });

    input.addEventListener("keydown", function (e) {
        if (e.key == "Enter"){
            input.blur();
        }
    })

    span.replaceWith(input);
    input.focus();
}

async function save() {
    const updatedData = {
        username: document.getElementById("username").innerText,
        fname: document.getElementById("fname").innerText,
        lname: document.getElementById("lname").innerText,
        email: document.getElementById("email").innerText,
    };

    try {
        let res = await fetch("http://localhost:3001/profile", {
            method: "PUT",
            credentials: "include",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(updatedData)
        })
        if (res.ok) {
            originalData = {
                username: document.getElementById("username").textContent,
                fname: document.getElementById("fname").textContent,
                lname: document.getElementById("lname").textContent,
                email: document.getElementById("email").textContent,
            };
            document.getElementById("currentState").textContent = "";
        } else {
            let errorBody;
            try {
                errorBody = await res.json();
            } catch (e) {
                console.error("Non-JSON error response:", await res.text());
                alert("Erro inesperado do servidor.");
                return;
            }
            
            if (res.status === 409) {
                if (errorBody.code === 409.1) {
                    alert("O Username j√° est√° a ser usado!");
                    return;
                } else if (errorBody.code === 409.2) {
                    alert("O email j√° est√° a ser usado!");
                    return;
                }
            } else if (res.status == 400){
                switch (errorBody.code) {
                    case 400.1:
                        alert("Username inv√°lido.");
                        break;
                    case 400.2:
                        alert("Primeiro nome inv√°lido.");
                        break;
                    case 400.3:
                        alert("√öltimo nome inv√°lido.");
                        break;
                    case 400.4:
                        alert("Email inv√°lido.");
                        break;
                    default:
                        alert("Erro de valida√ß√£o: " + (errorBody.message || "Dados inv√°lidos."));
                }
                return;
            }

            alert("Erro ao atualizar perfil.");
        }
    } catch (err) {
        console.error("Update error: ", err);
    }
}

</script>

<style>
.error-message {
    color: red;
}

.currentState {
    margin-top: 15px;
    color: orange;
    font-weight: bold;
}

.avatar {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid #ccc;
    display: block;
    margin-bottom: 10px;
}
</style>